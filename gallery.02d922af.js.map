{"mappings":"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","sources":["client_src/js/gallery.js","node_modules/three/examples/jsm/webxr/VRButton.js"],"sourcesContent":["require('dotenv').config();\n\nimport Web3 from 'web3';\nimport abi from '../../contracts/abi.json';\n\nconst loader = require('../js/blocking-loader');\nconst galleriesPresets = require('../js/galleries-presets');\n\nconst { displayPainting, clearPaintings } = require('../js/display-paintings');\n\nlet gallery;\nlet web3;\nlet contract;\n\nconst contractAddrReg = new RegExp('^0x[a-fA-F0-9]{40}$');\n\nconst queryParams = new Proxy(new URLSearchParams(window.location.search), {\n    get: (searchParams, prop) => searchParams.get(prop),\n});\n\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { VRButton } from 'three/examples/jsm/webxr/VRButton.js';\nimport { XRControllerModelFactory } from 'three/examples/jsm/webxr/XRControllerModelFactory.js';\n\nconst gltfLoader = new GLTFLoader();\nconst scene = new THREE.Scene();\nlet camera = new THREE.PerspectiveCamera(\n    75,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    1000\n);\n\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\n\nrenderer.shadowMap.enabled = true;\n\nscene.background = new THREE.Color(135, 206, 235);\nrenderer.setSize(window.innerWidth, window.innerHeight);\n\nrenderer.xr.enabled = true;\n\n\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight\n    camera.updateProjectionMatrix()\n    renderer.setSize(window.innerWidth, window.innerHeight)\n}\n\n\nwindow.init3d = (id) => new Promise((resolve, reject) => {\n\n    const galleryPreset = galleriesPresets.findById(id);\n\n    console.log(\"Gallery Preset\", galleryPreset);\n\n    gltfLoader.load(\n        galleryPreset.location,\n        async function (gltf) {\n\n            gallery = gltf.scene;\n            gallery.scale.set(galleryPreset.scene.scale, galleryPreset.scene.scale, galleryPreset.scene.scale);\n            gallery.position.set(\n                galleryPreset.scene.position.x,\n                galleryPreset.scene.position.y,\n                galleryPreset.scene.position.z);\n\n            camera.fov = (galleryPreset.camera.fov);\n            camera.updateProjectionMatrix();\n\n            camera.position.set(\n                galleryPreset.camera.position.x,\n                galleryPreset.camera.position.y,\n                galleryPreset.camera.position.z\n            );\n\n            if(typeof galleryPreset.postRenderModifier === 'function')\n                await galleryPreset.postRenderModifier(gallery);\n\n            scene.add(gallery);\n\n\n\n            window.addEventListener('resize', onWindowResize, false);\n            onWindowResize();\n\n            //const controls = new OrbitControls(camera, renderer.domElement)\n\n            renderer.setAnimationLoop(function () {\n                renderer.render( scene, camera );\n                //controls.update();\n            });\n\n            resolve();\n\n        },\n        () => {},\n        (error) => {\n            console.log(error);\n            reject();\n        });\n\n    document.body.appendChild(renderer.domElement);\n    document.body.appendChild(VRButton.createButton(renderer));\n\n\n});\n\nwindow.loadGallery = async () => {\n\n    if(!contractAddrReg.test(queryParams.g) && (queryParams.g !== 'example'))\n        return alert(\"Invalid Gallery Address!\");\n\n    web3 = new Web3(process.env.COINEX_NET_RPC_URL);\n\n    contract = new web3.eth.Contract(abi, queryParams.g === 'example' ? process.env.GALLERY_EXAMPLE_1 : queryParams.g);\n\n    loader.show();\n\n    const galleryIndex = parseInt(await contract.methods.getGalleryIndex().call());\n\n    const paintings = await contract.methods.getPaintings().call();\n\n    console.log(\"Paintings\", paintings);\n\n    await init3d(galleryIndex);\n\n    for(const painting in paintings) {\n        displayPainting(\n            gallery,\n            paintings[painting].posX,\n            paintings[painting].posY,\n            paintings[painting].posZ,\n            paintings[painting].rotX,\n            paintings[painting].rotY,\n            paintings[painting].rotZ,\n            paintings[painting].width,\n            paintings[painting].aspect,\n            paintings[painting].url\n        );\n    }\n\n    loader.hide();\n\n};\n\nloadGallery();","class VRButton {\n\n\tstatic createButton( renderer ) {\n\n\t\tconst button = document.createElement( 'button' );\n\n\t\tfunction showEnterVR( /*device*/ ) {\n\n\t\t\tlet currentSession = null;\n\n\t\t\tasync function onSessionStarted( session ) {\n\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\n\n\t\t\t\tawait renderer.xr.setSession( session );\n\t\t\t\tbutton.textContent = 'EXIT VR';\n\n\t\t\t\tcurrentSession = session;\n\n\t\t\t}\n\n\t\t\tfunction onSessionEnded( /*event*/ ) {\n\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\n\n\t\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\t\tcurrentSession = null;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'pointer';\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\n\t\t\tbutton.style.width = '100px';\n\n\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\tbutton.onmouseenter = function () {\n\n\t\t\t\tbutton.style.opacity = '1.0';\n\n\t\t\t};\n\n\t\t\tbutton.onmouseleave = function () {\n\n\t\t\t\tbutton.style.opacity = '0.5';\n\n\t\t\t};\n\n\t\t\tbutton.onclick = function () {\n\n\t\t\t\tif ( currentSession === null ) {\n\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\n\t\t\t\t\t// be requested separately.)\n\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentSession.end();\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction disableButton() {\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'auto';\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\n\t\t\tbutton.style.width = '150px';\n\n\t\t\tbutton.onmouseenter = null;\n\t\t\tbutton.onmouseleave = null;\n\n\t\t\tbutton.onclick = null;\n\n\t\t}\n\n\t\tfunction showWebXRNotFound() {\n\n\t\t\tdisableButton();\n\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\n\n\t\t}\n\n\t\tfunction showVRNotAllowed( exception ) {\n\n\t\t\tdisableButton();\n\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\n\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\n\n\t\t}\n\n\t\tfunction stylizeElement( element ) {\n\n\t\t\telement.style.position = 'absolute';\n\t\t\telement.style.bottom = '20px';\n\t\t\telement.style.padding = '12px 6px';\n\t\t\telement.style.border = '1px solid #fff';\n\t\t\telement.style.borderRadius = '4px';\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\n\t\t\telement.style.color = '#fff';\n\t\t\telement.style.font = 'normal 13px sans-serif';\n\t\t\telement.style.textAlign = 'center';\n\t\t\telement.style.opacity = '0.5';\n\t\t\telement.style.outline = 'none';\n\t\t\telement.style.zIndex = '999';\n\n\t\t}\n\n\t\tif ( 'xr' in navigator ) {\n\n\t\t\tbutton.id = 'VRButton';\n\t\t\tbutton.style.display = 'none';\n\n\t\t\tstylizeElement( button );\n\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\n\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\n\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\n\n\t\t\t\t\tbutton.click();\n\n\t\t\t\t}\n\n\t\t\t} ).catch( showVRNotAllowed );\n\n\t\t\treturn button;\n\n\t\t} else {\n\n\t\t\tconst message = document.createElement( 'a' );\n\n\t\t\tif ( window.isSecureContext === false ) {\n\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n\n\t\t\t} else {\n\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\n\n\t\t\t}\n\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\n\t\t\tmessage.style.width = '180px';\n\t\t\tmessage.style.textDecoration = 'none';\n\n\t\t\tstylizeElement( message );\n\n\t\t\treturn message;\n\n\t\t}\n\n\t}\n\n\tstatic xrSessionIsGranted = false;\n\n\tstatic registerSessionGrantedListener() {\n\n\t\tif ( 'xr' in navigator ) {\n\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\n\t\t\t// throws a silent exception and aborts execution entirely.\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\n\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\n\n\t\t\t\tVRButton.xrSessionIsGranted = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n}\n\nVRButton.registerSessionGrantedListener();\n\nexport { VRButton };\n"],"names":["$3NNSQ","parcelRequire","$2e81c5a0f10917ae$export$da3cdac99155b982","static","renderer","button","document","createElement","disableButton","style","display","cursor","left","width","onmouseenter","onmouseleave","onclick","stylizeElement","element","position","bottom","padding","border","borderRadius","background","color","font","textAlign","opacity","outline","zIndex","navigator","id","xr","isSessionSupported","then","supported","currentSession","async","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","sessionInit","optionalFeatures","requestSession","end","showEnterVR","xrSessionIsGranted","click","catch","exception","console","warn","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","config","$6Awmu","displayPainting","clearPaintings","$443da268708619f4$var$gallery","$443da268708619f4$var$web3","$443da268708619f4$var$contract","$443da268708619f4$var$contractAddrReg","RegExp","$443da268708619f4$var$queryParams","Proxy","URLSearchParams","search","get","searchParams","prop","$443da268708619f4$var$gltfLoader","$7lx9d","GLTFLoader","$443da268708619f4$var$scene","$ilwiq","Scene","$443da268708619f4$var$camera","PerspectiveCamera","innerWidth","innerHeight","$443da268708619f4$var$renderer","WebGLRenderer","antialias","$443da268708619f4$var$onWindowResize","aspect","updateProjectionMatrix","setSize","shadowMap","enabled","Color","init3d","Promise","resolve","reject","galleryPreset","$fZ8NE","findById","log","load","gltf","scene","scale","set","x","y","z","fov","camera","postRenderModifier","add","setAnimationLoop","render","error","body","appendChild","domElement","createButton","loadGallery","g","alert","$parcel$interopDefault","eth","Contract","$33SoD","$hXJAl","show","galleryIndex","parseInt","methods","getGalleryIndex","call","paintings","getPaintings","painting","$443da268708619f4$require$displayPainting","posX","posY","posZ","rotX","rotY","rotZ","url","hide"],"version":3,"file":"gallery.02d922af.js.map"}